// Code generated by templ@v0.2.364 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"gohtmx/internal/model"
)

func BasePage(title string, showNavbar bool, user *model.User) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>")
		if err != nil {
			return err
		}
		var var_2 string = title
		_, err = templBuffer.WriteString(templ.EscapeString(var_2))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><script type=\"module\" src=\"/assets/dist/index.js\">")
		if err != nil {
			return err
		}
		var_3 := ``
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script><link rel=\"stylesheet\" href=\"/assets/dist/index.css\"></head><body class=\"h-full w-full flex flex-col justify-stretch items-stretch\">")
		if err != nil {
			return err
		}
		if showNavbar {
			err = Navbar(user).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<div class=\"grow\">")
		if err != nil {
			return err
		}
		err = var_1.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func HomePage(title string, user *model.User) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_4 := templ.GetChildren(ctx)
		if var_4 == nil {
			var_4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_5 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<!doctype html> <header class=\"hero w-full bg-base-300 p-2 md:p-16\"><section class=\"hero-content flex-col lg:flex-row\"><div><h1 class=\"text-5xl font-bold\">")
			if err != nil {
				return err
			}
			var_6 := `Headline`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><p class=\"py-6\">")
			if err != nil {
				return err
			}
			var_7 := `Lede`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div><div class=\"card shrink-0 bg-base-100 lg:basis-[480px]\"><div class=\"flex flex-col items-center gap-2 p-4 lg:p-8 text-xs md:text-sm\"><h4>")
			if err != nil {
				return err
			}
			var_8 := `Call to action`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h4><a class=\"btn-primary btn w-full\" href=\"/action1\">")
			if err != nil {
				return err
			}
			var_9 := `Action 1 →`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a><div class=\"w-full text-center font-bold\">")
			if err != nil {
				return err
			}
			var_10 := `— or —`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div><a class=\"btn-primary btn w-full\" href=\"/action2\">")
			if err != nil {
				return err
			}
			var_11 := `Action 2 →`
			_, err = templBuffer.WriteString(var_11)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a></div></div></section></header> <main class=\"mx-auto flex flex-col items-center md:my-4 md:max-w-screen-md lg:max-w-screen-lg\"><section class=\"flex flex-col gap-2 mb-4\"><p class=\"font-bold\">")
			if err != nil {
				return err
			}
			var_12 := `Intro`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></section><section class=\"mb-4 flex w-full flex-col gap-4\">")
			if err != nil {
				return err
			}
			var_13 := `Body content`
			_, err = templBuffer.WriteString(var_13)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</section></main>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = BasePage(title, true, user).Render(templ.WithChildren(ctx, var_5), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
